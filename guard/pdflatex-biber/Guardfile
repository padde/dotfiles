notification :growl

def pdflatex(file)
  system "pdflatex -shell-escape -interaction=nonstopmode #{file}"
end

def biber(file)
  system "biber #{file}"
end

def activate(app)
  script = <<-OSASCRIPT
    tell application "#{app}"
      activate
    end tell
  OSASCRIPT

  system "osascript -e '#{script}'"
end

guard :shell do
  watch /(.*)\.tex$/ do |m|
    next if m[0] =~ /gnuplottex/

    file = m[0]
    
    n 'Running PDFLaTeX', file, :pending
    
    if pdflatex(file)
      n 'Success running PDFLaTeX', file, :success
      activate('Preview')
      "Success running PDFLaTeX on #{file}"
    else
      n 'Error running PDFLaTeX', file, :failed
      "Error running PDFLaTeX on #{file}"
    end
  end
  
  watch /.*\.bib$/ do |m|
    bib_file = m[0]
    
    # each tex file using biber generates a .bcf file
    # so run pdflatex-biber-pdflatex for all of them
    Dir.glob('**/*.bcf') do |bcf_file|
      bare_file = bcf_file.gsub(/\.bcf$/,'')
      tex_file = "#{bare_file}.tex"
      
      n "Running Biber\nbib: #{bib_file}", tex_file

      if biber(bare_file)
        n 'Success running Biber', tex_file, :success
        activate('Preview')
        "Success running Biber on #{tex_file}"
      else
        n 'Error running Biber', tex_file, :failed
        "Error running Biber on #{tex_file}"
      end
    end
  end
end
