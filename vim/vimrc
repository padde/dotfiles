set nocompatible               " we're running Vim, not Vi!

set number                     " show line numbers

set nowrap                     " do not wrap lines

set visualbell                 " no beeps please!

set laststatus=2               " always show the statusline

set encoding=utf-8             " utf-8 ftw!
set fileencoding=utf-8

set nohidden                   " do not store data about old buffers

set tabstop=4                  " show tabs as 4 spaces

set expandtab                  " i like soft tabs
set shiftwidth=2
set softtabstop=2

set wildmenu                   " complete all the commands!
set wildmode=list:longest,full

set mouse=a                    " mouse support

runtime macros/matchit.vim     " needed for textobj-rubyblock

filetype off                   " set filetype off for pathogen
call pathogen#infect()         " use pathogen

let g:NERDTreeChDirMode=2      " enable running commands in current dir

syntax on                      " enable syntax highlighting
filetype on                    " enable filetype detection
filetype indent on             " enable filetype-specific indenting
filetype plugin on             " enable filetype-specific plugins

set guifont=Menlo\ Regular:h12 " prettier font for MacVim

if has("gui_running")          " use railscasts theme in MacVim
  colorscheme railscasts
endif

let mapleader = ","            " nobody likes \ as leader!

if has('mac')                  " share clipboard on osx
  set clipboard+=unnamed
endif

if has("gui_running")          " hide menu bar in MacVim
  set guioptions=egmrt
endif

" aliases
command Wsudo :w !sudo tee %
command WQ wq
command Wq wq
command W w
command Q q

" diff with last saved version
function! s:DiffWithSaved()
  let filetype=&ft
  diffthis
  vnew | r # | normal! 1Gdd
  diffthis
  exe "setlocal bt=nofile bh=wipe nobl noswf ro ft=" . filetype
endfunction
com! DiffSaved call s:DiffWithSaved()

" nerd tree shortcuts in gui
if has("gui_running") && has("mac")
  nnoremap <D-d>      :NERDTreeToggle<CR><C-w>p
  inoremap <D-d> <Esc>:NERDTreeToggle<CR><C-w>pa
  vnoremap <D-d> <Esc>:NERDTreeToggle<CR><C-w>pgv
endif

autocmd WinEnter * call s:CloseIfOnlyNerdTreeLeft()

" close all open buffers on entering a window if the only
" buffer that's left is the NERDTree buffer
function! s:CloseIfOnlyNerdTreeLeft()
  if exists("t:NERDTreeBufName")
    if bufwinnr(t:NERDTreeBufName) != -1
      if winnr("$") == 1
        q
      endif
    endif
  endif
endfunction

" show invisibles as in Text Mate (with improvements)
set listchars=tab:▸\ ,eol:¬,trail:·,extends:>,precedes:<
set list

" powerline
let g:Powerline_symbols = 'fancy'

" enable going to previous/next line with left/right arrow keys
set whichwrap+=<,>,[,]

" hightlight current line in gui
if has("gui_running")
  set cursorline
endif

" better search highlighting
hi Search cterm=NONE ctermbg=yellow ctermfg=darkred
hi Search guibg=#eac43c guifg=#b5382d
set hlsearch

" do not append newlines to files
" au BufWritePre * :set binary | set noeol
" au BufWritePost * :set nobinary | set eol

" clear search string
command Clearsearch :let @/ = ""
