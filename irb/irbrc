require 'rubygems'
require 'irb/ext/save-history'

# save history
ARGV.concat [ "--readline", "--prompt-mode", "simple" ]
IRB.conf[:SAVE_HISTORY] = 10000
IRB.conf[:HISTORY_FILE] = "#{ENV['HOME']}/.irb-save-history"

# define and use own prompt mode
IRB.conf[:PROMPT][:PADDE] = {
  :RETURN      => "=> %s\n",
  :PROMPT_I    => "%03n> ",   # normal prompt
  :PROMPT_C    => "%03n> ",   # code continuation
  :PROMPT_N    => "%03n> ",   # ?
  :PROMPT_S    => "%03n  "    # string continuation
}
IRB.conf[:PROMPT_MODE] = :PADDE

# colorize irb
require 'matisse/autoload'

# colorized p command
require 'awesome_print'

# please only interesting methods!
class Object
  # Return only the methods not present on basic objects
  def interesting_methods
    (self.methods - Object.new.methods).sort
  end
end

# quick benchmarking
def quick_benchmark(repetitions=100, &block)
  require 'benchmark'

  Benchmark.bmbm do |b|
    b.report {repetitions.times &block} 
  end
  nil
end
