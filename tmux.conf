# general settings
setenv -g PATH "/usr/local/bin:$PATH"
set -g default-shell $SHELL
set -g default-terminal "screen-256color"
set -ga terminal-overrides ",xterm-256color:Tc"
set -g history-limit 100000
set -s escape-time 0

# window numbering
set -g base-index 1
setw -g pane-base-index 1
set -g renumber-windows on
set -g automatic-rename on

# mouse
set -g mouse on
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
bind -n WheelDownPane select-pane -t= \; send-keys -M

# act like Vim
setw -g mode-keys vi
unbind [
bind v copy-mode
bind p paste-buffer

# I hit this accidentally all the time
bind C-z resize-pane -Z

# main window at the top, splits at the bottom
bind = select-layout main-horizontal\; run "tmux resize-pane -t1 -y$((#{session_height} * 2/3))"

# keep pwd when splitting and creating new windows
bind c new-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
bind '"' split-window -c "#{pane_current_path}"

# force kill pane
bind X confirm-before -p "force-kill pane #{pane_index}? (y/n)" "run-shell 'kill -9 #{pane_pid}'"

# copy and paste
bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi y send -X copy-selection-and-cancel
bind -T copy-mode-vi Escape send -X cancel

# smart pane switching with awareness of vim splits
unbind C-h
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim(diff)?$|emacs.*$' && tmux send-keys C-h;) || tmux select-pane -L"
unbind C-j
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim(diff)?$|emacs.*$' && tmux send-keys C-j;) || tmux select-pane -D"
unbind C-k
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim(diff)?$|emacs.*$' && tmux send-keys C-k;) || tmux select-pane -U"
unbind C-l
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim(diff)?$|emacs.*$' && tmux send-keys C-l;) || tmux select-pane -R"

# make original C-hjkl available through prefix
bind -r C-h send-keys C-h
bind -r C-j send-keys C-j
bind -r C-k send-keys C-k
bind -r C-l send-keys C-l

# window resizing
bind -r h resize-pane -L
bind -r j resize-pane -D
bind -r k resize-pane -U
bind -r l resize-pane -R

# window switching
bind -r C-p previous-window
bind -r C-n next-window

# colors
set -g pane-border-bg colour0
set -g pane-border-fg colour235
set -g pane-active-border-bg colour0
set -g pane-active-border-fg colour1

# status line
set -g status-position bottom
set -g status-bg colour235
set -g status-fg colour8
set -g status-left ' #S │'
set -g status-right '#(date +"%a %d %b %H:%M") '
set -g status-justify left
set -g window-status-format ' #I·#W'
set -g window-status-current-format ' #I·#W'
set -g window-status-current-fg colour4
set -g window-status-current-bg colour235

# reload tmux.conf
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# local config
if-shell "[ -f ~/.tmux.conf.local ]" 'source ~/.tmux.conf.local'

# create new session if none exists
if-shell "[[ -z $(tmux list-sessions) ]]" new-session
